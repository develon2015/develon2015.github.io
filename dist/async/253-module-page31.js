(self.webpackChunkmy_react_ts=self.webpackChunkmy_react_ts||[]).push([[253],{7487:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(348),a=t.n(r);const l=e=>{var n=0,t=e.children.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/ /g,"&nbsp;").replace(/\t/g,"&nbsp;&nbsp;&nbsp;&nbsp;").split(/\r\n|\n/),r="";e.inline?t.forEach((e=>{r+="".concat(e,"<br>")})):t.forEach((e=>{r+="<span class=".concat(a()["line-number"],">").concat(++n<10?"0"+n:n,"</span>").concat(e,"<br>")}));var l=r.replace(/(\/\/.*?)(?:<br>|$)/g,'<span class="'.concat(a()["single-comment"],'">$1</span><br>')).replace(/(\/\*.*?\*\/)/g,'<span class="'.concat(a()["multi-comment"],'">$1</span>')).replace(/(import(&nbsp;)+.*?<br>)/g,'<span class="'.concat(a().import,'">$1</span>'));return React.createElement("span",{className:a().code,dangerouslySetInnerHTML:{__html:l},style:e.inline?{display:"inline-block"}:null})}},1707:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>o});var r=t(3804),a=t(7487),l=t(324),c=r.createElement(a.Z,null,"export default () => {\n    const [n, setN] = React.useState<number>(8);\n    console.log('render'); // setN(number)会调用setState导致组件状态改变，函数会被再次调用！但是状态被继承，并且会计算DOM，只局部更新。\n    return (\n        <div>\n            <span>{n}</span>\n            <button onClick={() => setN(n + 1)}>+1</button>\n            {code_useState}\n        </div>\n    );\n};"),s=r.createElement(a.Z,null,"    const [n, setN] = React.useState<number>(8);\n    const [msg, setMsg] = React.useState<string>('默认msg');\n    React.useEffect(() => {\n        setTimeout(() => {\n            setMsg(`现在的n是${n}`);\n        }, 200);\n        return () => { // 会在下次触发副作用之前调用\n            setMsg('n发生了改变，清除副作用中...');\n        };\n    }, [n]); // 如果n发生了变化，或者初次渲染时，激活副作用。对象引用不变，改变对象属性不会触发副作用！"),u=r.createElement(a.Z,null,"    const ref = React.useRef<{ value: number }>({ value: 999 }); // 只会初始化一次, 后续重入不再初始化, 只会返回第一次创建的对象的引用\n    // 为什么要用current属性访问对象呢? 很简单, 因为要保证返回的是一个ref是一个对象, 不能是number等原生数据类型, 否则修改无法被React缓存, 除非像状态一样提供set函数\n    const [ignored, forceUpdate] = React.useReducer(x => x + 1, 0); // 显然, 改变ref.current不会触发渲染, 使用useReducer达到强制渲染的目的\n\n    <span>{ref.current.value}</span>\n    <button onClick={() => ref.current.value += 1}>+1</button>\n    <button onClick={() => forceUpdate()}>强制更新</button>");const o=()=>{var[e,n]=r.useState(8),[t,a]=r.useState("默认msg");r.useEffect((()=>(setTimeout((()=>{a("现在的n是".concat(e))}),200),()=>{a("n发生了改变，清除副作用中...")})),[e]);var o=r.useRef({value:999}),[i,p]=r.useReducer((e=>e+1),0);return r.createElement("div",null,r.createElement("div",null,r.createElement(l.Z,null,"useState"),r.createElement("span",{style:{fontSize:"20px",marginRight:"10px"}},e),r.createElement("button",{style:{fontSize:"20px"},onClick:()=>n(e+1)},"+1"),c),r.createElement("div",null,r.createElement(l.Z,null,"useEffect"),r.createElement("h2",null,t),s),r.createElement("div",null,r.createElement(l.Z,null,"useRef & useReducer"),r.createElement("span",{style:{fontSize:"20px",marginRight:"10px"}},o.current.value),r.createElement("button",{style:{fontSize:"20px"},onClick:()=>o.current.value+=1},"+1"),r.createElement("button",{style:{fontSize:"20px",marginLeft:"12px"},onClick:()=>p()},"强制更新"),u))}},5558:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>l});var r=t(3645),a=t.n(r)()(!1);a.push([e.id,".HTGFoGF9s9hzpIR2kuKsJ {\r\n    background: black;\r\n    color: #fd971f;\r\n    padding: 20px 10px;\r\n    display: block;\r\n    text-align: left;\r\n    margin: 2px;\r\n    word-wrap: break-word;\r\n    /** 允许断字 */\r\n    word-break: break-all;\r\n}\r\n._3aKPN9l2M2Fx2uwxEZI0qR {\r\n    user-select: none;\r\n    color: #ae81ff;\r\n    display: inline-block;\r\n    width: 40px;\r\n}\r\n._3Pf7ckr6_3ioETaDAR-ld8 {\r\n    color: #a6e22e;\r\n}\r\n._2TRsHE-vnfuOoYxDvK1zLZ {\r\n    color: #66d9ef;\r\n}\r\n._1LPFr7Pnva5SG4MnbbCq42 {\r\n    color: #f74449;\r\n}",""]),a.locals={code:"HTGFoGF9s9hzpIR2kuKsJ","line-number":"_3aKPN9l2M2Fx2uwxEZI0qR","single-comment":"_3Pf7ckr6_3ioETaDAR-ld8","multi-comment":"_2TRsHE-vnfuOoYxDvK1zLZ",import:"_1LPFr7Pnva5SG4MnbbCq42"};const l=a},348:(e,n,t)=>{var r=t(3379),a=t(5558);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.id,a,""]]);r(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}}}]);